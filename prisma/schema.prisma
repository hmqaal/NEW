generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role {
  ADMIN
  TEACHER
}

enum AssignmentStatus {
  PENDING
  COMPLETED
}

enum WordMarkStatus {
  OK
  ORANGE
  RED
}

model Organization {
  id          String      @id @default(cuid())
  name        String
  slug        String      @unique
  users       User[]
  classrooms  Classroom[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model User {
  id               String               @id @default(cuid())
  email            String               @unique
  name             String?
  passwordHash     String
  role             Role
  organization     Organization?        @relation(fields: [organizationId], references: [id])
  organizationId   String?
  teacherOf        TeacherClassroom[]
  createdAssignments HomeworkAssignment[] @relation("AssignmentCreator")
  createdAttempts    HomeworkAttempt[]    @relation("AttemptCreator")
  createdAt        DateTime             @default(now())
  updatedAt        DateTime             @updatedAt
}

model Classroom {
  id             String             @id @default(cuid())
  name           String
  organization   Organization       @relation(fields: [organizationId], references: [id])
  organizationId String
  students       Student[]
  teachers       TeacherClassroom[]
  createdAt      DateTime           @default(now())
  updatedAt      DateTime           @updatedAt
}

model TeacherClassroom {
  teacher     User      @relation(fields: [teacherId], references: [id])
  teacherId   String
  classroom   Classroom @relation(fields: [classroomId], references: [id])
  classroomId String

  @@id([teacherId, classroomId])
}

model Student {
  id             String               @id @default(cuid())
  firstName      String
  lastName       String
  email          String?
  guardianEmail  String?
  classroom      Classroom            @relation(fields: [classroomId], references: [id])
  classroomId    String
  assignments    HomeworkAssignment[]
  createdAt      DateTime             @default(now())
  updatedAt      DateTime             @updatedAt
}

model HomeworkAssignment {
  id            String            @id @default(cuid())
  student       Student           @relation(fields: [studentId], references: [id])
  studentId     String
  surahNumber   Int
  fromAyah      Int
  toAyah        Int
  dueDate       DateTime?
  status        AssignmentStatus  @default(PENDING)
  createdBy     User              @relation("AssignmentCreator", fields: [createdById], references: [id])
  createdById   String
  attempts      HomeworkAttempt[]
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt

  @@index([studentId])
}

model HomeworkAttempt {
  id           String            @id @default(cuid())
  assignment   HomeworkAssignment @relation(fields: [assignmentId], references: [id])
  assignmentId String
  attemptNo    Int
  notes        String?
  submittedAt  DateTime          @default(now())
  createdBy    User              @relation("AttemptCreator", fields: [createdById], references: [id])
  createdById  String
  wordMarks    WordMark[]
}

model WordMark {
  id          String          @id @default(cuid())
  attempt     HomeworkAttempt @relation(fields: [attemptId], references: [id])
  attemptId   String
  surahNumber Int
  ayahNumber  Int
  wordIndex   Int
  status      WordMarkStatus
  comment     String?

  @@index([attemptId])
  @@index([surahNumber, ayahNumber])
}

// Qur'an data (Madani Mushaf, 15-line pages)
model Surah {
  number       Int      @id
  nameArabic   String
  nameEnglish  String
  ayahCount    Int
  ayahs        Ayah[]
}

model Ayah {
  id             String  @id @default(cuid())
  surah          Surah   @relation(fields: [surahNumber], references: [number])
  surahNumber    Int
  numberInSurah  Int
  pageNumber     Int
  juzNumber      Int
  words          Word[]

  @@unique([surahNumber, numberInSurah])
  @@index([pageNumber])
}

model Word {
  id           String @id @default(cuid())
  surahNumber  Int
  ayahNumber   Int
  wordIndex    Int
  textUthmani  String
  pageNumber   Int

  ayah         Ayah   @relation(fields: [surahNumber, ayahNumber], references: [surahNumber, numberInSurah])

  @@unique([surahNumber, ayahNumber, wordIndex])
  @@index([pageNumber])
}
